# Generated by Django 5.1.2 on 2024-11-27 06:27

import apps.main.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('username', models.SlugField(unique=True, validators=[apps.main.validators.validate_username], verbose_name='Username')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('dashboard_privacy', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=8, verbose_name='Dashboard')),
                ('map_privacy', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=8, verbose_name='Map (default)')),
                ('joined_on', models.DateTimeField(auto_now_add=True, verbose_name='Join date')),
                ('first_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Last name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
